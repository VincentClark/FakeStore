{"version":3,"sources":["Components/Header.js","Components/HeaderSub.js","Components/HomePage.js","Components/Nav_Button.js","Components/NavBar.js","Components/Pages/ReactPlayer.js","Components/Pages/VideoReact.js","Components/Pages/NotFound.js","Components/Pages/PlyrReact.js","Components/Parts/HTML5Video.js","Components/Pages/FS5VideoPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","HomePage","HeaderSub","Nav_Button","useRef","id","color","hoverColor","backGroundColor","hoverBackgroundColor","useState","fontColor","setFontColor","background","setBackground","setColors","fColor","bColor","appStyles","backgroundColor","style","onMouseEnter","onMouseLeave","href","defaultProps","NavBar","navConfig","bgColor","map","ELEMENT","toString","key","ref","component","ReactMediaPlayer","url","controls","ReactVideoPlayer","playsInline","poster","src","width","height","NotFound","videoSrc","type","sources","PlyrReact","source","HTML5Video","videoInfo","hostname","window","location","port","myDocker","urlPath","videoRef","previousUrl","useEffect","current","console","log","load","defaultControls","FS5VideoPlayer","isLoaded","SetIsLoaded","error","SetError","items","SetItems","nowPlaying","SetNowPlaying","fetch","then","response","json","videos","catch","index","onClick","App","VideoReact","ReactPlayer","element","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5721bebd.chunk.js","sourcesContent":["import \"../App.css\"\nconst Header = ({title}) => {\n    return (\n        <div className = \"container-fluid\">\n        <header className = \"header\">\n            <h1>{title}</h1>\n        </header>\n        </div>\n        \n    )\n}\n\nexport default Header\n\n","import \"../App.css\"\nconst Header = ({title}) => {\n    return (\n        <div className = \"container-fluid\">\n        <header className = \"header\">\n            <h2>{title}</h2>\n        </header>\n        </div>\n        \n    )\n}\n\nexport default Header\n\n","import React from 'react'\nimport HeaderSub from './HeaderSub'\nconst HomePage = () => {\n    return (\n        <div className = \"container-fluid\">\n            <HeaderSub title=\"HomePage\" />\n            <div>\n                Purpose: Evalute Different Video Players that will use the Video Streaming Service\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage\n","import React, {useState} from \"react\";\nconst Nav_Button = ({useRef, title, id, color,hoverColor,backGroundColor,hoverBackgroundColor}) => {\n    const [fontColor, setFontColor] = useState (color);\n    const [background,setBackground] = useState(backGroundColor);\n    function setColors(fColor,bColor){\n        setFontColor(fColor);\n        setBackground(bColor);\n    }\n    \n    const appStyles = {\n        color: `${fontColor}`,\n        backgroundColor: `${background}`\n        \n    };\n    \n    return (\n        <a\n        style={appStyles}\n        onMouseEnter = {() => setColors(hoverColor,hoverBackgroundColor)}\n        onMouseLeave = {() => setColors(color,backGroundColor)}\n        id={id} \n        href={useRef}\n        >\n        {title}\n        </a>\n    );\n};\n\nNav_Button.defaultProps = {\n    color: 'white',\n    hoverColor: 'rgb(253, 253, 253)',\n    backGroundColor: 'rgb(70, 70, 70)',\n    hoverBackgroundColor: 'rgb(61, 61, 61)'\n};\n\nexport default Nav_Button;\n","import NavButton from \"./Nav_Button\";\r\n\r\nconst NavBar = ({\r\n  navConfig,\r\n  bgColor,\r\n  color,\r\n  hoverColor,\r\n  backgroundColor,\r\n  hoverBackgroundColor,\r\n}) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"menu\" style={{ backgroundColor: bgColor }}>\r\n        <ul>\r\n          {navConfig.map((ELEMENT) => (\r\n            <li key={ELEMENT.id.toString() + \"li\"} id={ELEMENT.id.toString() + \"lid\"}>\r\n              <NavButton\r\n                key={ELEMENT.id.toString()}\r\n                id={ELEMENT.key}\r\n                title={ELEMENT.title}\r\n                useRef={ELEMENT.ref}\r\n                color={color}\r\n                hoverColor={hoverColor}\r\n                backGroundColor={backgroundColor}\r\n                hoverBackgroundColor={hoverBackgroundColor}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  navConfig: [\r\n    {\r\n      id: 1,\r\n      title: \"Home\",\r\n      ref: \"/\",\r\n      component: \"HompePage\",\r\n    }\r\n  ],\r\n  color: \"white\",\r\n  hoverColor: \"rgb(240, 240, 240)\",\r\n  backGroundColor: \"rgb(70, 70, 70)\",\r\n  hoverBackgroundColor: \"rgb(61, 61, 61)\",\r\n  bgColor: \"rgb(70,70,70)\",\r\n};\r\n\r\nexport default NavBar;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport ReactPlayer from 'react-player';\n\n\n\nconst sources = {\n    ScrubJs: 'http://media.w3.org/2010/05/sintel/trailer.mp4',\n    bunnyTrailer: 'http://media.w3.org/2010/05/bunny/trailer.mp4',\n    bunnyMovie: 'http://media.w3.org/2010/05/bunny/movie.mp4',\n    test: 'http://media.w3.org/2010/05/video/movie_300.webm'\n  };\n//<Player src = \"http://media.w3.org/2010/05/sintel/trailer.mp4\" />\nconst ReactMediaPlayer = ({url}) => {\n\n  return (\n    <>\n    <div className=\"container-fluid\">\n    <h3>React Player</h3>\n    <ul>\n      <li>More documentation</li>\n      <li>Easy to install</li>\n      <li>No Poster Option (yet)</li>\n    </ul>\n    <sub>https://www.npmjs.com/package/react-player</sub>\n    <div>\n      <ReactPlayer \n      url=\"http://localhost:8080/videos/videofiles?videosrc=testvideo\" \n      controls={true}\n      />\n    </div>\n    <div>\n        <a href=\"#\">Change</a>\n    </div>\n    </div>\n    </>\n  );\n};\n\nReactMediaPlayer.defaultProps = {\n  url: sources.ScrubJs,\n};\n\nexport default ReactMediaPlayer;\n","import { Player } from \"video-react\";\n\nconst ReactVideoPlayer = ({ url }) => {\n  // const sources = {\n  //     ScrubJs: 'http://media.w3.org/2010/05/sintel/trailer.mp4',\n  //     bunnyTrailer: 'http://media.w3.org/2010/05/bunny/trailer.mp4',\n  //     bunnyMovie: 'http://media.w3.org/2010/05/bunny/movie.mp4',\n  //     test: 'http://media.w3.org/2010/05/video/movie_300.webm'\n  //   };\n  return (\n    <div className=\"container-fluid\">\n      <h2>video-react player</h2>\n      <ul>\n        <li>\n        It has been a struggle to get this working. A lot of dependencie issues.\n        </li>\n        <li>Unable to get the CSS to work right.</li>\n        <li>Will finetune controls to auto start.</li>\n      </ul>\n\n      <Player\n        playsInline\n        poster=\"/assets/poster.png\"\n        src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n        width = {720}\n        height = {480}\n      />\n    </div>\n  );\n};\n\nReactVideoPlayer.defaultProps = {\n  url: \"http://media.w3.org/2010/05/sintel/trailer.mp4\",\n};\nexport default ReactVideoPlayer;\n","\n\nconst NotFound = () => {\n    return (\n        <div>\n            That is a 404 baby\n        </div>\n    )\n}\n\nexport default NotFound\n","import Plyr from \"plyr-react\";\nimport \"plyr-react/dist/plyr.css\";\n\nconst videoSrc = {\n    type:\"video\",\n    sources: [\n        {\n            src: \"http://media.w3.org/2010/05/sintel/trailer.mp4\",\n        }\n    ]\n}\nconst PlyrReact = () => {\n  return (\n    <div className=\"container-fluid\">\n        <ul>\n            <li>Documentation is lacking. Took a while to troublshoot the sources.</li>\n            <li>Cannont control size very well.</li>\n        </ul>\n        <Plyr source={videoSrc} controls={true} \n        width={720}\n        height=\"480px\"\n        />\n    \n    </div>\n  );\n};\n\nexport default PlyrReact;\n","import { useEffect, useRef } from \"react\";\n\n\nconst HTML5Video = ({ videoInfo }) => {\n  const urlPath = () => {\n    const hostname = window.location.hostname;\n    const port = window.location.port;\n    const myDocker = `http://${hostname}:${port}`\n    const myDev = \"http://localhost:8080\";\n    if (port === \"3000\") {\n      return myDev;\n    } else {\n      return myDocker;\n    }\n  }\n  let url = `${urlPath()}/videos/videofiles?videosrc=${videoInfo.src}`\n  const videoRef = useRef(url);\n\n  const previousUrl = useRef(url);\n  useEffect(() => {\n    if (previousUrl.current === url) {\n      console.log(\"current\", previousUrl.current);\n      console.log(\"videoref\", videoRef.current);\n      console.log(\"DAMN\", videoInfo)\n      return;\n    }\n    if (videoRef.current) {\n      console.log(\".load()\");\n      videoRef.current.load();\n    }\n    previousUrl.current = url;\n  }, [url, videoInfo]);\n\n\n  /**\n   * Adding logic for chromecast button\n   * Currently throwing a lot of erros. Revisit\n   * https://stackoverflow.com/questions/44999267/how-to-chromecast-enable-a-website/49089116\n   */\n\n  //`${urlPath()}/videos/videofiles?videosrc=${videoInfo.src}}\n  return (\n    <div>\n\n      <h2>HTMLFiveVideo</h2>\n      <video width=\"720\" controls={videoInfo.defaultControls} ref={videoRef}>\n        <source src={url} type=\"video/mp4\" />\n\n      </video>\n\n\n    </div>\n  );\n};\n\nexport default HTML5Video;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport { useState, useEffect } from \"react\";\nimport HTML5Video from \"../Parts/HTML5Video\";\n\n\nconst FS5VideoPlayer = () => {\n  //Generate the playList\n  const [isLoaded, SetIsLoaded] = useState(false);\n  const [error, SetError] = useState(null);\n  const [items, SetItems] = useState([]);\n  const [nowPlaying, SetNowPlaying] = useState(\"\");\n\n\n  // Needs to work on variable declaration and not hardcoded\n  const url = 'http://localhost:8080/videos/videolist'\n\n\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        SetItems(json.videos);\n        SetIsLoaded(true);\n      })\n      .catch(error => {\n        SetError(error);\n        SetIsLoaded(true);\n      });\n\n  }, []);\n  if (error) {\n    return <div>{error}</div>;\n  }\n  else if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n  else {\n    //console.log(items[0].src);\n    //console.log(\"loading-nowPlaying\", nowPlaying);\n    if (nowPlaying === \"\") {\n      SetNowPlaying(items[0]);\n      // console.log(\"Initial Load\")\n    }\n    else {\n      // console.log(\"all good\")\n    }\n  }\n\n  function playVideo(videoObj) {\n    //  console.log(\"videoObj\", videoObj);\n    SetNowPlaying(items[videoObj]);\n\n    //  console.log(\"Now Playing\", nowPlaying);\n\n  }\n  return (\n    <>\n      <div className=\"container-fluid temp-container\">\n        <HTML5Video\n          videoInfo={nowPlaying}\n        />\n        <div>\n          {\n            // Map Video List \n            //\n\n            items.map((videos, index) => {\n              return (\n                <div key={videos.id}>\n                  <a href={`#${index}`} onClick={() => playVideo(index)}>\n                    {videos.title}\n                  </a>\n                </div>\n              )\n            }\n            )}\n\n\n        </div>\n      </div>\n    </>\n  );\n};\n\n\nexport default FS5VideoPlayer;\n","import Header from \"./Components/Header\";\nimport HomePage from \"./Components/HomePage\";\nimport NavBar from \"./Components/NavBar\"\nimport ReactPlayer from \"./Components/Pages/ReactPlayer\"\nimport VideoReact from \"./Components/Pages/VideoReact\"\nimport NotFound from \"./Components/Pages/NotFound\"\nimport PlyrReact from \"./Components/Pages/PlyrReact\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport FS5VideoPlayer from \"./Components/Pages/FS5VideoPlayer\";\n\n\nfunction App() {\n  const navConfig = [\n    {\n      id: 1,\n      title: \"Home\",\n      ref: \"/videoplayer\",\n      component: HomePage,\n    },\n    {\n      id: 2,\n      title: \"Video-React\",\n      ref: \"/videoplayer/videoreact\",\n      component: VideoReact,\n    },\n    {\n      id: 3,\n      title: \"React-Player\",\n      ref: \"/videoplayer/reactplayer\",\n      component: ReactPlayer\n    },\n    {\n      id: 4,\n      title: \"PlyrReact\",\n      ref: \"/videoplayer/plyrreact\",\n      component: PlyrReact,\n    }, {\n      id: 5,\n      title: \"FSVideoPlayer\",\n      ref: \"/videoplayer/fsvideoplayer\",\n      component: FS5VideoPlayer,\n    }\n\n  ];\n  //      <Route path=\"/reactvideoplayer\" component = {ReactVideoPlayer} />\n  // <Route path=\"/reactmediaplayer\" component = {ReactMediaPlayer} />\n  return (\n\n    <Router>\n      <div className=\"fluid-container\">\n        <NavBar navConfig={navConfig} />\n        <Header title={\"React VideoPlayer Evaluation\"} />\n        <Switch>\n          {\n            navConfig.map((element) => (\n              <Route key={element.id} path={element.ref} component={element.component} exact />\n            ))\n          }\n          <Route path=\"*\" component={NotFound} />\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}