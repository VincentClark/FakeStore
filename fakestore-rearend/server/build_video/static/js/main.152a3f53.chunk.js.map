{"version":3,"sources":["Components/Header.js","Components/HeaderSub.js","Components/Pages/HomePage.js","Components/Nav_Button.js","Components/NavBar.js","Components/Pages/ReactPlayer.js","Components/Pages/VideoReact.js","Components/Pages/NotFound.js","Components/Pages/PlyrReact.js","Components/Parts/Footer.js","Components/Parts/HTML5Video.js","Components/Pages/FS5VideoPlayer.js","Components/Pages/VideoUploader.js","Components/Pages/VideoUploaderConfirmation.js","Components/Pages/VideoUploader_og.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","HomePage","HeaderSub","Nav_Button","useRef","id","href","NavBar","navConfig","map","ELEMENT","toString","key","ref","ReactMediaPlayer","url","controls","defaultProps","ReactVideoPlayer","playsInline","poster","src","width","height","NotFound","videoSrc","type","sources","PlyrReact","source","Footer","HTML5Video","videoInfo","hostname","window","location","port","myDocker","urlPath","videoRef","previousUrl","useEffect","current","console","log","load","defaultControls","description","upvotes","FS5VideoPlayer","useState","isLoaded","SetIsLoaded","error","SetError","items","SetItems","nowPlaying","SetNowPlaying","currenthost","host","currentport","currentprotocal","protocol","urli","fetch","then","response","json","videos","catch","index","onClick","alt","axios","require","VideoUploader","selectedVideoFile","setSelectedVideoFile","selectIconFile","setSelectIconFile","selectPosterFile","setSelectPosterFile","isVideoSelected","setIsVideoSelected","isIconSelected","setIsIconSelected","isPosterSelected","setIsPosterSelected","name","onChange","event","target","files","formData","FormData","append","headers","defaults","method","data","VideoUploaderConfirmation","Video_Uploader_og","encType","action","App","component","VideoReact","ReactPlayer","Video_Uploader","Video_Uploaderog","element","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.152a3f53.chunk.js","sourcesContent":["import \"../App.css\"\nconst Header = ({ title }) => {\n    return (\n\n        <header className=\"header\">\n            <h1>{title}</h1>\n        </header>\n\n\n    )\n}\n\nexport default Header\n\n","import \"../App.css\"\nconst Header = ({title}) => {\n    return (\n        <div className = \"container-fluid\">\n        <header className = \"header\">\n            <h2>{title}</h2>\n        </header>\n        </div>\n        \n    )\n}\n\nexport default Header\n\n","import React from 'react'\nimport HeaderSub from '../HeaderSub'\nconst HomePage = () => {\n    return (\n        <div className=\"container-fluid\">\n            <HeaderSub title=\"HomePage\" />\n            <div>\n                Purpose: Evalute Different Video Players that will use the Video Streaming Service\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage\n","// import React, { useState } from \"react\";\nconst Nav_Button = ({ useRef, title, id }) => {\n    //backGroundColor, hoverBackgroundColor (removed props)\n    // const [fontColor, setFontColor] = useState(color);\n    // const [background, setBackground] = useState(backGroundColor);\n    // function setColors(fColor, bColor) {\n    //     setFontColor(fColor);\n    //     setBackground(bColor);\n    // }\n\n    // const appStyles = {\n    //     color: `${fontColor}`,\n    //     backgroundColor: `${background}`\n\n    // };\n    //style moved into css file\n    // will remove this once css is in place\n    return (\n        <a\n            className=\"nav-button\"\n            id={id}\n            href={useRef}\n        >\n            {title}\n        </a>\n    );\n};\n\n// Nav_Button.defaultProps = {\n//     color: 'white',\n//     hoverColor: 'rgb(253, 253, 253)',\n//     backGroundColor: 'rgb(70, 70, 70)',\n//     hoverBackgroundColor: 'rgb(61, 61, 61)'\n// };\n\nexport default Nav_Button;\n","import NavButton from \"./Nav_Button\";\r\n// REMOE COMMENTS ONCE SECURED\r\n//need to undo this and put everything in to css file\r\n//   color,  hoverColor,  backgroundColor,  hoverBackgroundColor,\r\n// bgColor\r\nconst NavBar = ({\r\n  navConfig\r\n}) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"menu\">\r\n        <ul className=\"menu_list\">\r\n          {navConfig.map((ELEMENT) => (\r\n            <li key={ELEMENT.id.toString() + \"li\"} id={ELEMENT.id.toString() + \"lid\"}>\r\n              <NavButton\r\n                key={ELEMENT.id.toString()}\r\n                id={ELEMENT.key}\r\n                title={ELEMENT.title}\r\n                useRef={ELEMENT.ref}\r\n\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// NavBar.defaultProps = {\r\n//   navConfig: [\r\n//     {\r\n//       id: 1,\r\n//       title: \"Home\",\r\n//       ref: \"/\",\r\n//       component: \"HompePage\",\r\n//     }\r\n//   ],\r\n//   color: \"white\",\r\n//   hoverColor: \"rgb(240, 240, 240)\",\r\n//   backGroundColor: \"rgb(70, 70, 70)\",\r\n//   hoverBackgroundColor: \"rgb(61, 61, 61)\",\r\n//   bgColor: \"rgb(70,70,70)\",\r\n// };\r\n\r\nexport default NavBar;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport ReactPlayer from 'react-player';\n\n\n\nconst sources = {\n    ScrubJs: 'http://media.w3.org/2010/05/sintel/trailer.mp4',\n    bunnyTrailer: 'http://media.w3.org/2010/05/bunny/trailer.mp4',\n    bunnyMovie: 'http://media.w3.org/2010/05/bunny/movie.mp4',\n    test: 'http://media.w3.org/2010/05/video/movie_300.webm'\n  };\n//<Player src = \"http://media.w3.org/2010/05/sintel/trailer.mp4\" />\nconst ReactMediaPlayer = ({url}) => {\n\n  return (\n    <>\n    <div className=\"container-fluid\">\n    <h3>React Player</h3>\n    <ul>\n      <li>More documentation</li>\n      <li>Easy to install</li>\n      <li>No Poster Option (yet)</li>\n    </ul>\n    <sub>https://www.npmjs.com/package/react-player</sub>\n    <div>\n      <ReactPlayer \n      url=\"http://localhost:8080/videos/videofiles?videosrc=testvideo\" \n      controls={true}\n      />\n    </div>\n    <div>\n        <a href=\"#\">Change</a>\n    </div>\n    </div>\n    </>\n  );\n};\n\nReactMediaPlayer.defaultProps = {\n  url: sources.ScrubJs,\n};\n\nexport default ReactMediaPlayer;\n","import { Player } from \"video-react\";\n\nconst ReactVideoPlayer = ({ url }) => {\n  // const sources = {\n  //     ScrubJs: 'http://media.w3.org/2010/05/sintel/trailer.mp4',\n  //     bunnyTrailer: 'http://media.w3.org/2010/05/bunny/trailer.mp4',\n  //     bunnyMovie: 'http://media.w3.org/2010/05/bunny/movie.mp4',\n  //     test: 'http://media.w3.org/2010/05/video/movie_300.webm'\n  //   };\n  return (\n    <div className=\"container-fluid\">\n      <h2>video-react player</h2>\n      <ul>\n        <li>\n        It has been a struggle to get this working. A lot of dependencie issues.\n        </li>\n        <li>Unable to get the CSS to work right.</li>\n        <li>Will finetune controls to auto start.</li>\n      </ul>\n\n      <Player\n        playsInline\n        poster=\"/assets/poster.png\"\n        src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n        width = {720}\n        height = {480}\n      />\n    </div>\n  );\n};\n\nReactVideoPlayer.defaultProps = {\n  url: \"http://media.w3.org/2010/05/sintel/trailer.mp4\",\n};\nexport default ReactVideoPlayer;\n","\n\nconst NotFound = () => {\n    return (\n        <div>\n            That is a 404 baby\n        </div>\n    )\n}\n\nexport default NotFound\n","import Plyr from \"plyr-react\";\nimport \"plyr-react/dist/plyr.css\";\n\nconst videoSrc = {\n    type:\"video\",\n    sources: [\n        {\n            src: \"http://media.w3.org/2010/05/sintel/trailer.mp4\",\n        }\n    ]\n}\nconst PlyrReact = () => {\n  return (\n    <div className=\"container-fluid\">\n        <ul>\n            <li>Documentation is lacking. Took a while to troublshoot the sources.</li>\n            <li>Cannont control size very well.</li>\n        </ul>\n        <Plyr source={videoSrc} controls={true} \n        width={720}\n        height=\"480px\"\n        />\n    \n    </div>\n  );\n};\n\nexport default PlyrReact;\n","\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div>\n                Footer Information Here\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { useEffect, useRef } from \"react\";\n\n\nconst HTML5Video = ({ videoInfo }) => {\n  const urlPath = () => {\n    const hostname = window.location.hostname;\n    const port = window.location.port;\n    const myDocker = `http://${hostname}:${port}`\n    const myDev = \"http://localhost:8080\";\n    if (port === \"3000\") {\n      return myDev;\n    } else {\n      return myDocker;\n    }\n  }\n  let url = `${urlPath()}/videos/videofiles?videosrc=${videoInfo.src}`\n  const videoRef = useRef(url);\n\n  const previousUrl = useRef(url);\n  useEffect(() => {\n    if (previousUrl.current === url) {\n      console.log(\"current\", previousUrl.current);\n      console.log(\"videoref\", videoRef.current);\n      console.log(\"DAMN\", videoInfo)\n      return;\n    }\n    if (videoRef.current) {\n      console.log(\".load()\");\n      videoRef.current.load();\n    }\n    previousUrl.current = url;\n  }, [url, videoInfo]);\n\n\n  /**\n   * Adding logic for chromecast button\n   * Currently throwing a lot of erros. Revisit\n   * https://stackoverflow.com/questions/44999267/how-to-chromecast-enable-a-website/49089116\n   */\n\n  //`${urlPath()}/videos/videofiles?videosrc=${videoInfo.src}}\n  return (\n    <div className=\"container\">\n\n      <h2>{videoInfo.title}</h2>\n      <video width=\"720\" controls={videoInfo.defaultControls} ref={videoRef}>\n        <source src={url} type=\"video/mp4\" />\n\n      </video>\n      <div className=\"container-tbd\">\n\n        {videoInfo.description}\n\n\n      </div>\n      <div className=\"container-tbd\">\n        Up Votes: {videoInfo.upvotes}\n      </div>\n    </div>\n  );\n};\n\nexport default HTML5Video;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport { useState, useEffect } from \"react\";\nimport HTML5Video from \"../Parts/HTML5Video\";\n\n\nconst FS5VideoPlayer = () => {\n  //Generate the playList\n  const [isLoaded, SetIsLoaded] = useState(false);\n  const [error, SetError] = useState(null);\n  const [items, SetItems] = useState([]);\n  const [nowPlaying, SetNowPlaying] = useState(\"\");\n\n\n  // Needs to work on variable declaration and not hardcoded\n  // This should come from the app.js through prop.\n  //for release I need to change this. \n  const currenthost = window.location.host;\n  const currentport = window.location.port;\n  const currentprotocal = window.location.protocol;\n  const path = () => {\n    if (currentprotocal === \"http:\") {\n      return 'http://localhost:8080/videos'\n    } else {\n      return `${currentprotocal}//${currenthost}${currentport}/videos/`;\n    }\n  };\n\n\n  const urli = () => {\n    if (currentport === \"3000\") {\n      return 'http://localhost:8080/videos/videostub'\n    } else {\n      return (`${currentprotocal}//${currenthost}/videos/videostub`);\n    }\n  };\n\n  //const url = 'http://localhost:8080/videos/videostub'\n  console.log(urli());\n  useEffect(() => {\n    fetch(urli())\n      .then(response => response.json())\n      .then(json => {\n        SetItems(json.videos);\n        SetIsLoaded(true);\n      })\n      .catch(error => {\n        SetError(error);\n        SetIsLoaded(true);\n      });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (error) {\n    return <div>{error}</div>;\n  }\n  else if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n  else {\n    console.log(items.src);\n    //console.log(\"loading-nowPlaying\", nowPlaying);\n    if (nowPlaying === \"\") {\n      SetNowPlaying(items[0]);\n      console.log(\"Initial Loadd\")\n    }\n    else {\n      // console.log(\"all good\")\n\n    }\n  }\n\n  function playVideo(videoObj) {\n    //  console.log(\"videoObj\", videoObj);\n    SetNowPlaying(items[videoObj]);\n\n    //  console.log(\"Now Playing\", nowPlaying);\n\n  }\n  return (\n    <>\n      <div>\n        <a href=\"/videoplayer/VideoUploader\">Upload Video</a>\n      </div>\n      <div className=\"\">\n        <HTML5Video\n          videoInfo={nowPlaying}\n        />\n        <div className=\"grid-container_vc\">\n          {\n            // Map Video List \n            //\n\n            items.map((videos, index) => {\n              return (\n                <div key={videos.id} className=\"grid_item\">\n                  <a href={`#${index}`} onClick={() => playVideo(index)}>\n                    <img src={`${path()}/videoimage/${videos.src}_icon.png`} alt={videos.title} className=\"video_icon\" />\n                  </a>\n                </div>\n              )\n            }\n            )}\n\n\n        </div>\n      </div>\n    </>\n  );\n};\n\n\nexport default FS5VideoPlayer;\n","import { useState } from 'react'\nconst axios = require('axios');\n// set up state rules\n\nconst VideoUploader = () => {\n    const [selectedVideoFile, setSelectedVideoFile] = useState(null);\n    const [selectIconFile, setSelectIconFile] = useState(null);\n    const [selectPosterFile, setSelectPosterFile] = useState(null);\n    const [isVideoSelected, setIsVideoSelected] = useState(false);\n    const [isIconSelected, setIsIconSelected] = useState(false);\n    const [isPosterSelected, setIsPosterSelected] = useState(false);\n\n    // const [videoDescription, setVideoDescription] = useState(null);\n    // const [videoTitle, setVideoTitle] = useState(null);\n    //const [videoTags, setVideoTags] = useState(null);\n    //const [videoCategory, setVideoCategory] = useState(null);\n    // const [videoAuthor, setVideoAuthor] = useState(null);\n\n    const changeHandler = (event) => {\n        setSelectedVideoFile(event.target.files[0]);\n        setIsVideoSelected(true);\n    };\n\n    const iconHandler = (event) => {\n        setIsIconSelected(true);\n        setSelectIconFile(event.target.files[0]);\n    };\n    const posterHandler = (event) => {\n        setIsPosterSelected(true);\n        setSelectPosterFile(event.target.files[0]);\n    };\n\n\n\n    const handleSubmission = () => {\n        console.log(\"selectedFile\", selectedVideoFile);\n\n        //    const config = {headers: { 'Content-Type': 'multipart/form-data'}};\n        const formData = new FormData();\n        formData.append(\"video\", selectedVideoFile);\n        formData.append(\"icon\", selectIconFile);\n        formData.append(\"poster\", selectPosterFile);\n        console.log(formData.headers);\n        //  console.log(formData);\n        //  axios.post('http://localhost:8080/videos/videoupload', formData, config)\n        console.log(axios.defaults.headers);\n\n        axios(\n            {\n                method: \"post\",\n                url: 'http://localhost:8080/videos/videoupload',\n                data: formData,\n                headers: {\n                    \"content-type\": \"multipart/form-data\"\n                }\n            }\n        ).then((response) => {\n            console.log(response);\n            //  console.log(response.data);\n            //  console.log(response.data.videoId);\n        }).catch((error) => {\n            console.log(error);\n        });\n    };\n\n\n\n\n    // const formData = new FormData();\n    // formData.append(\"file\", selectedFile);\n    // formData.append(\"videoDescription\", videoDescription);\n\n\n\n    return (\n        <div>\n            <h2>Video Uploader</h2>\n            <div><label>Video</label><input type=\"file\" id=\"video\" name=\"video\" onChange={changeHandler} /></div>\n            <div><label>Icon</label><input type=\"file\" id=\"icon\" name=\"icon\" onChange={iconHandler} /></div>\n            <div><label>Poster</label><input type=\"file\" id=\"poster\" name=\"poster\" onChange={posterHandler} /></div>\n            {isVideoSelected ? (\n                <div>\n                    <div>Filename: {selectedVideoFile.name}</div>\n\n                </div>\n            ) : (\n                <div>Select a file to show details</div>\n            )\n            }\n            {isIconSelected ? (\n                <div>\n                    <div>Filename: {selectIconFile.name}</div>\n                </div>\n\n            ) : (\n                <div>Select an icon to show details</div>\n            )\n            }\n            <div>\n                {isPosterSelected ? (\n                    <div>Filename: {selectPosterFile.name}</div>\n\n                ) : (\n                    <div>Select a poster to show details</div>\n                )\n                }\n            </div>\n\n            <button onClick={handleSubmission}>Submit</button>\n        </div>\n\n    )\n\n}\n\nexport default VideoUploader\n","\n\nconst VideoUploaderConfirmation = () => {\n    return (\n        <div>\n            <h1>Video Uploader Confirmation</h1>\n        </div>\n    )\n}\n\nexport default VideoUploaderConfirmation\n","\nconst Video_Uploader_og = () => {\n    //Will Reformat all of this - Goal to get it work and add new files to the server. \n    // currently no validation on the form.\n    const posturl = () => {\n        if (window.location.port === '3000') {\n            console.log(\"On Development\");\n            return 'http://localhost:8080/videos/videoupload'\n        }\n        else {\n            console.log(\"On Production\");\n            return (`${window.location.protocol}//${window.location.host}:${window.location.port}/videos/videoupload`)\n        }\n    }\n    return (\n        <div>\n            <form encType=\"multipart/form-data\" method=\"post\" action={posturl()}>\n                <div className=\"form-group\">\n                    <div>\n                        <label>Video Title: </label>\n                        <input name=\"video_title\" />\n                    </div>\n                    <div>\n                        <label>Video Description: </label>\n                        <input name=\"video_description\" />\n\n                    </div>\n                    <div>\n                        <label>Upload Video File: </label>\n                        <input type=\"file\" name=\"video\" />\n                    </div>\n\n\n                    <div>\n                        <button type=\"submit\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\n\nexport default Video_Uploader_og;\n","import Header from \"./Components/Header\";\nimport HomePage from \"./Components/Pages/HomePage\";\nimport NavBar from \"./Components/NavBar\"\nimport ReactPlayer from \"./Components/Pages/ReactPlayer\"\nimport VideoReact from \"./Components/Pages/VideoReact\"\nimport NotFound from \"./Components/Pages/NotFound\"\nimport PlyrReact from \"./Components/Pages/PlyrReact\";\nimport Footer from \"./Components/Parts/Footer\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport FS5VideoPlayer from \"./Components/Pages/FS5VideoPlayer\";\nimport Video_Uploader from \"./Components/Pages/VideoUploader\";\nimport VideoUploaderConfirmation from \"./Components/Pages/VideoUploaderConfirmation\";\nimport Video_Uploaderog from \"./Components/Pages/VideoUploader_og\";\n\n\nfunction App() {\n  const navConfig = [\n    {\n      id: 1,\n      title: \"Home\",\n      ref: \"/videoplayer\",\n      component: HomePage,\n    },\n    {\n      id: 2,\n      title: \"Video-React\",\n      ref: \"/videoplayer/videoreact\",\n      component: VideoReact,\n    },\n    {\n      id: 3,\n      title: \"React-Player\",\n      ref: \"/videoplayer/reactplayer\",\n      component: ReactPlayer\n    },\n    {\n      id: 4,\n      title: \"PlyrReact\",\n      ref: \"/videoplayer/plyrreact\",\n      component: PlyrReact,\n    }, {\n      id: 5,\n      title: \"FSVideoPlayer\",\n      ref: \"/videoplayer/fsvideoplayer\",\n      component: FS5VideoPlayer,\n    },\n    {\n      id: 6,\n      title: \"Video Uploader\",\n      ref: \"/videoplayer/videouploader\",\n      component: Video_Uploader,\n    },\n    {\n      id: 7,\n      title: \"VideoUploaderOG\",\n      ref: \"/videoplayer/videouploaderog\",\n      component: Video_Uploaderog,\n    },\n\n\n  ];\n  //      <Route path=\"/reactvideoplayer\" component = {ReactVideoPlayer} />\n  // <Route path=\"/reactmediaplayer\" component = {ReactMediaPlayer} />\n  return (\n\n    <Router>\n      <div className=\"container_vc\">\n\n        <NavBar navConfig={navConfig} />\n        <div className=\"container_xc\">\n          <Header title={\"React VideoPlayer Evaluation\"} />\n          <Switch>\n            {\n              navConfig.map((element) => (\n                <Route key={element.id} path={element.ref} component={element.component} exact />\n              ))\n            }\n            <Route path=\"/videoplayer/videouploader\" component={Video_Uploader} exact />\n            <Route path=\"/videoplayer/videouploaderconfirmation\" component={VideoUploaderConfirmation} exact />\n            <Route path=\"*\" component={NotFound} />\n\n          </Switch>\n        </div>\n        <Footer />\n\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}